/**
 * OpenGL 3.3 Accessor — Indexed fragment outputs, sampler objects, timer queries,
 * instanced attribute divisors, and packed attribute submission helpers.
 *
 * <p>Extends {@link GL32Accessor} with API that refines fragment output binding,
 * decouples texture sampling state via sampler objects, exposes high-precision GPU
 * timing, and streamlines vertex/texcoord/color submission using “packed” formats.
 * Also adds per-attribute instance divisors for instanced rendering.</p>
 *
 * <h2>Indexed Fragment Outputs</h2>
 * <ul>
 *   <li>{@code glBindFragDataLocationIndexed} — Bind a fragment shader output
 *       (by name) to a numbered color attachment and optional index (dual-source blending).</li>
 *   <li>{@code glGetFragDataIndex} — Query the index assigned to a named fragment output.</li>
 * </ul>
 *
 * <h2>Sampler Objects</h2>
 * <ul>
 *   <li>{@code glGenSamplers}, {@code glDeleteSamplers}, {@code glIsSampler}, {@code glBindSampler} —
 *       Create/manage sampler objects and bind them to texture units independently of textures.</li>
 *   <li>{@code glSamplerParameteri/f}, {@code glSamplerParameteriv/fv},
 *       {@code glSamplerParameterIiv/Iuiv} — Set filtering, wrap modes, compare mode/func,
 *       LOD range/bias, border color, and other sampling parameters.</li>
 *   <li>{@code glGetSamplerParameter*i/f/v/Iiv/Iuiv} — Query sampler parameters.</li>
 * </ul>
 *
 * <h2>Timer Queries (64-bit)</h2>
 * <ul>
 *   <li>{@code glQueryCounter} — Insert a timestamp into the GL command stream.</li>
 *   <li>{@code glGetQueryObjecti64v/ui64v} (and convenience {@code glGetQueryObjecti64/ui64}) —
 *       Retrieve 64-bit query results such as elapsed GPU time and timestamps.</li>
 * </ul>
 *
 * <h2>Instancing Control</h2>
 * <ul>
 *   <li>{@code glVertexAttribDivisor} — Set per-vertex-attrib instance rate
 *       (e.g., 1 = advance once per instance, 0 = per-vertex).</li>
 * </ul>
 *
 * <h2>Packed Attribute Submission</h2>
 * <ul>
 *   <li>{@code glVertexP2/3/4ui}, {@code glVertexP2/3/4uiv} —
 *       Submit positions encoded in packed normalized integer formats.</li>
 *   <li>{@code glTexCoordP1/2/3/4ui}, {@code glTexCoordP1/2/3/4uiv} —
 *       Submit texture coordinates in packed form.</li>
 *   <li>{@code glMultiTexCoordP1/2/3/4ui}, {@code glMultiTexCoordP1/2/3/4uiv} —
 *       Packed multi-texturing coordinates for a specified texture unit.</li>
 *   <li>{@code glNormalP3ui}, {@code glNormalP3uiv} — Submit packed normals.</li>
 *   <li>{@code glColorP3/4ui}, {@code glColorP3/4uiv} — Submit packed primary colors.</li>
 *   <li>{@code glSecondaryColorP3ui}, {@code glSecondaryColorP3uiv} — Submit packed secondary colors.</li>
 *   <li>{@code glVertexAttribP1/2/3/4ui}, {@code glVertexAttribP1/2/3/4uiv} —
 *       Submit packed generic vertex attributes.</li>
 * </ul>
 *
 * <h3>Notes</h3>
 * <ul>
 *   <li>Sampler objects allow sharing and switching sampling state without rebinding textures,
 *       improving pipeline clarity and performance.</li>
 *   <li>Timer queries return nanosecond-resolution timestamps; always check availability before reading.</li>
 *   <li>Packed submission encodes multiple components into a single integer based on the chosen format
 *       (e.g., 10:10:10:2), useful for compact vertex data and bandwidth savings.</li>
 *   <li>Dual-source blending (via output index) requires appropriate blend state and hardware support.</li>
 * </ul>
 */
